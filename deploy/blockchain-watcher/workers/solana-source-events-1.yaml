---        
apiVersion: v1
kind: Service
metadata:
  name: {{ .NAME }}-solana-source-events-1
  namespace: {{ .NAMESPACE }}
  labels:
    app: {{ .NAME }}-solana-source-events-1
spec:
  selector:
    app: {{ .NAME }}-solana-source-events-1
  ports:
    - port: {{ .PORT }}
      targetPort: {{ .PORT }}
      name: {{ .NAME }}-solana-source-events-1
      protocol: TCP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: blockchain-watcher-solana-source-events-1-pvc
  namespace: {{ .NAMESPACE }}
  labels:
    app: {{ .NAME }}-solana-source-events-1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
  storageClassName: gp2
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .NAME }}-solana-source-events-1-jobs
  namespace: {{ .NAMESPACE }}
  labels:
    app: {{ .NAME }}-solana-source-events-1
data:
  testnet-jobs.json: |-
    [
      {
        "id": "poll-log-message-published-solana",
        "chain": "solana",
        "source": {
          "action": "PollSolanaTransactions",
          "config": {
            "slotBatchSize": 1000,
            "commitment": "finalized",
            "interval": 15000,
            "signaturesLimit": 100,
            "programIds": ["3u8hJUVTA4jH1wYAyUur7FFZVQ8H635K3tSHHF4ssjQ5"],
            "chain": "solana",
            "network": "devnet",
            "chainId": 1
          }
        },
        "handlers": [
          {
            "action": "HandleSolanaTransactions",
            "target": "sns",
            "mapper": "solanaLogMessagePublishedMapper",
            "config": {
              "programId": "3u8hJUVTA4jH1wYAyUur7FFZVQ8H635K3tSHHF4ssjQ5",
              "metricName": "process_source_event"
            }
          }
        ]
      }
    ]
  mainnet-jobs.json: |-
    [
      {
        "id": "poll-log-message-published-solana",
        "chain": "solana",
        "source": {
          "action": "PollSolanaTransactions",
          "config": {
            "slotBatchSize": 1000,
            "commitment": "finalized",
            "interval": 15000,
            "signaturesLimit": 200,
            "programIds": ["worm2ZoG2kUd4vFXhvjh93UUH596ayRfgQ2MgjNMTth"],
            "chain": "solana",
            "chainId": 1
          }
        },
        "handlers": [
          {
            "action": "HandleSolanaTransactions",
            "target": "sns",
            "mapper": "solanaLogMessagePublishedMapper",
            "config": {
              "programId": "worm2ZoG2kUd4vFXhvjh93UUH596ayRfgQ2MgjNMTth",
              "metricName": "process_source_event"
            }
          }
        ]
      }
    ]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .NAME }}-solana-source-events-1
  namespace: {{ .NAMESPACE }}
  labels:
    app: {{ .NAME }}-solana-source-events-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .NAME }}-solana-source-events-1
  strategy: # Rolling update strategy for restarting the pods
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ .NAME }}-solana-source-events-1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .PORT }}"
    spec:
      containers:
        - name: {{ .NAME }}
          image: {{ .IMAGE_NAME }} # Docker image
          env:
            - name: NODE_ENV
              value: {{ .NODE_ENV }}
            - name: PORT
              value: "{{ .PORT }}"
            - name: LOG_LEVEL
              value: {{ .LOG_LEVEL }}
            - name: BLOCKCHAIN_ENV
              value: {{ .BLOCKCHAIN_ENV }}
            - name: DRY_RUN_ENABLED
              value: "{{ .DRY_RUN_ENABLED }}"
            - name: SNS_TOPIC_ARN
              value: {{ .SNS_TOPIC_ARN }}
            - name: SNS_REGION
              value: {{ .SNS_REGION }}
            - name: NODE_OPTIONS
              value: {{ .NODE_OPTIONS }}
            - name: SOLANA_RPCS
              valueFrom:
                secretKeyRef:
                  name: blockchain-watcher
                  key: solana-urls
            - name: JOBS_DIR
              value: /home/node/app/jobs
          resources:
            limits:
              cpu: {{ .SOLANA_RESOURCES_LIMITS_CPU }}
              memory: {{ .SOLANA_RESOURCES_LIMITS_MEMORY }}
            requests:
              cpu: {{ .SOLANA_RESOURCES_REQUESTS_CPU }}
              memory: {{ .SOLANA_RESOURCES_REQUESTS_MEMORY }}
          volumeMounts:
            - name: metadata-volume
              mountPath: /home/node/app/metadata-repo 
            - name: jobs-volume
              mountPath: /home/node/app/jobs
      restartPolicy: Always
      serviceAccountName: blockchain-watcher
      terminationGracePeriodSeconds: 30
      volumes:
        - name: metadata-volume
          persistentVolumeClaim:
            claimName: blockchain-watcher-solana-source-events-1-pvc
        - name: jobs-volume
          configMap:
            name: {{ .NAME }}-solana-source-events-1-jobs
            items:
              - key: {{ .BLOCKCHAIN_ENV }}-jobs.json
                path: jobs.json