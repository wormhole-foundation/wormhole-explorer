# Service
apiVersion: v1
kind: Service
metadata:
  name: {{ .NAME }}-backfiller
  namespace: {{ .NAMESPACE }}
  labels:
    app: {{ .NAME }}-backfiller
spec:
  selector:
    app: {{ .NAME }}-backfiller
  ports:
    - port: {{ .PORT }}
      targetPort: {{ .PORT }}
      name: {{ .NAME }}-backfiller
      protocol: TCP
# PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: blockchain-watcher-backfiller-pvc
  namespace: {{ .NAMESPACE }}
  labels:
    app: {{ .NAME }}-backfiller
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
  storageClassName: gp2
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .NAME }}-backfiller-jobs
  namespace: {{ .NAMESPACE }}
  labels:
    app: {{ .NAME }}-backfiller
data:
  testnet-jobs.json: |-
    [
    ]
  mainnet-jobs.json: |-
    [
    ]
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .NAME }}-backfiller
  namespace: {{ .NAMESPACE }}
  labels:
    app: {{ .NAME }}-backfiller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .NAME }}-backfiller
  strategy: # Rolling update strategy for restarting the pods
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ .NAME }}-backfiller
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .PORT }}"
    spec:
      containers:
        - name: {{ .NAME }}
          image: {{ .IMAGE_NAME }}  # Docker image
          env:
            - name: NODE_ENV
              value: {{ .NODE_ENV }}
            - name: PORT
              value: "{{ .PORT }}"
            - name: LOG_LEVEL
              value: {{ .LOG_LEVEL }}
            - name: BLOCKCHAIN_ENV
              value: {{ .BLOCKCHAIN_ENV }}
            - name: DRY_RUN_ENABLED
              value: "{{ .DRY_RUN_ENABLED }}"
            - name: SNS_TOPIC_ARN
              value: {{ .SNS_TOPIC_ARN }}
            - name: SNS_REGION
              value: {{ .SNS_REGION }}
            - name: NODE_OPTIONS
              value: {{ .NODE_OPTIONS }}
            - name: JOBS_DIR
              value: /home/node/app/jobs
          resources:
            requests:
              cpu: {{ .RESOURCES_REQUESTS_CPU }}
              memory: {{ .RESOURCES_REQUESTS_MEMORY }}
            limits:
              cpu: {{ .RESOURCES_LIMITS_CPU }}
              memory: {{ .RESOURCES_LIMITS_MEMORY }}
          volumeMounts:
            - name: metadata-volume
              mountPath: /home/node/app/metadata-repo 
            - name: jobs-volume
              mountPath: /home/node/app/jobs
      restartPolicy: Always
      serviceAccountName: blockchain-watcher
      terminationGracePeriodSeconds: 30
      volumes:
        - name: metadata-volume
          persistentVolumeClaim:
            claimName: blockchain-watcher-backfiller-pvc
        - name: jobs-volume
          configMap:
            name: {{ .NAME }}-backfiller-jobs
            items:
              - key: {{ .BLOCKCHAIN_ENV }}-jobs.json
                path: jobs.json
