---
apiVersion: v1
kind: Service
metadata:
  name: {{ .NAME }}
  namespace: {{ .NAMESPACE }}
  labels:
    app: {{ .NAME }}
spec:
  selector:
    app: {{ .NAME }}
  ports:
    - port: 80
      targetPort: {{ .PORT }}
      name: {{ .NAME }}
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .NAME }}
  namespace: {{ .NAMESPACE }}
spec:
  replicas: {{ .REPLICAS }}
  selector:
    matchLabels:
      app: {{ .NAME }}
  template:
    metadata:
      labels:
        app: {{ .NAME }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .PORT }}
    spec:
      containers:
        - name: {{ .NAME }}
          env:
            - name: ENVIRONMENT
              value: {{ .ENVIRONMENT }}
            - name: PORT
              value: {{ .PORT }}
            - name: LOG_LEVEL
              value: "INFO"
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: mongo-uri
            - name: MONGODB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: mongo-database
            - name: P2P_NETWORK
              value: {{ .P2P_NETWORK }}
            - name: CACHE_CHANNEL
              value: {{ .CACHE_CHANNEL }}
            - name: CACHE_URL
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: redis-uri
            - name: CACHE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: redis-prefix
          image: {{ .IMAGE_NAME }}
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 4
            httpGet:
              path: /api/health
              port: {{ .PORT }}
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 2
            httpGet:
              path: /api/ready
              port: {{ .PORT }}
          resources:
            limits:
              cpu: {{ .RESOURCES_LIMITS_CPU }}
              memory: {{ .RESOURCES_LIMITS_MEMORY }}
            requests:
              cpu: {{ .RESOURCES_REQUESTS_CPU }}
              memory: {{ .RESOURCES_REQUESTS_MEMORY }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 45